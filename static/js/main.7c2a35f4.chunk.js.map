{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","name","split","email","CardList","console","log","users","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,EAAO,SAAAC,GAClB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,8CAAyCH,EAAMI,KAAKC,KAAKC,MAAM,KAAK,GAApE,YAA0EN,EAAMI,KAAKC,KAAKC,MAAM,KAAK,MACxH,mCAAMN,EAAMI,KAAKC,KAAjB,OACA,kCAAKL,EAAMI,KAAKG,MAAhB,WCJKC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAER,qBAAKC,UAAU,YAAf,SACMD,EAAMW,MAAMC,KAAI,SAAAR,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,GAAhB,iBCLnCS,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEC,KAAK,SACLF,YAAeA,EACfG,SAAWF,EACXd,UAAU,aCuCDiB,E,kDA1Cb,aAAc,IAAD,8BACX,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAU,CAACC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXb,MAAO,GACPU,YAAa,IAJJ,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAf,GAAK,OAAI,EAAKS,SAAS,CAACT,MAAOA,S,oBAMvC,WAAS,IAAD,OACN,EAA+BkB,KAAKL,MAA5Bb,EAAR,EAAQA,MAAOU,EAAf,EAAeA,YACTS,EAAgBnB,EAAMoB,QAAQ,SAAA3B,GAClC,OAAOA,EAAKC,KAAK2B,cAAcC,SAASZ,EAAYW,kBAEtD,OACA,sBAAK/B,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,CACEa,YAAY,iBACZC,aAAe,SAAAI,GAAC,OAAI,EAAKJ,aAAaI,MAExC,cAAC,EAAD,CAAUR,MAAOmB,W,GA/BLI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c2a35f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css'\r\n\r\nexport const Card = props => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img alt='avatar' src={`https://eu.ui-avatars.com/api/?name=${props.user.name.split(' ')[0]}+${props.user.name.split(' ')[1]}`}/>\r\n        <h2> {props.user.name} </h2>\r\n        <p> {props.user.email} </p>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport './card-list.style.css'\r\nimport { Card }  from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <div className='card-list'>\r\n            { props.users.map(user => <Card key='user.id' user={user}/> ) }\r\n        </div>\r\n    )\r\n}","import './searchbox.style.css'\r\nimport React from 'react'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return ( \r\n    <input \r\n      type='search' \r\n      placeholder= { placeholder }\r\n      onChange={ handleChange }\r\n      className='search'\r\n    />\r\n  )\r\n}","import React, {Component} from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport { SearchBox } from './components/searchbox/searchbox.component.jsx'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      users: [],\n      searchField: ''\n    };\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(users => this.setState({users: users}))\n  }\n\n  handleChange = (e) => {\n    this.setState( {searchField: e.target.value} );\n  }\n  render(){\n    const { users, searchField } = this.state\n    const filteredUsers = users.filter( user => { \n      return user.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n    return(\n    <div className=\"App\">\n      <h1>USERS BASE</h1>\n      <SearchBox\n        placeholder='look for users'\n        handleChange={ e => this.handleChange(e) }\n      />\n      <CardList users={filteredUsers}/>\n    </div>\n    )\n  }\n}\n\n// function App() {\n//   return (\n\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}